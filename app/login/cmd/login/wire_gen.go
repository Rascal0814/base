// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"base/app/login/internal/biz"
	"base/app/login/internal/conf"
	"base/app/login/internal/server"
	"base/app/login/internal/service"
	"github.com/go-kratos/kratos/v2"
	"github.com/go-kratos/kratos/v2/log"
	"go.opentelemetry.io/otel/sdk/trace"
)

import (
	_ "go.uber.org/automaxprocs"
)

// Injectors from wire.go:

// wireApp init kratos application.
func wireApp(confServer *conf.Server, registry *conf.Registry, data *conf.Data, logger log.Logger, tracerProvider *trace.TracerProvider) (*kratos.App, func(), error) {
	discovery := biz.NewDiscovery(registry)
	userClient := biz.NewUserServiceClient(discovery, tracerProvider)
	cmdable := biz.NewRedisCmd(data, logger)
	loginUsecase := biz.NewLoginUsecase(logger, userClient, cmdable)
	loginService := service.NewLoginService(loginUsecase)
	grpcServer := server.NewGRPCServer(confServer, loginService, logger)
	httpServer := server.NewHTTPServer(confServer, loginService, logger)
	app := newApp(logger, grpcServer, httpServer)
	return app, func() {
	}, nil
}
